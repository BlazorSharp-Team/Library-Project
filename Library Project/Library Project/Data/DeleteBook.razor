@page "/admin/delete/{Id:int}"
@using BlazorApp.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h2>Könyv Törlése</h2>
<br />
<div class="form-group">
    <h4>Törölni szeretnéd ezt a könyvet?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>ID</td>
                <td>@book.Id</td>
            </tr>
            <tr>
                <td>Cím</td>
                <td>@book.Title</td>
            </tr>
            <tr>
                <td>ISBN szám</td>
                <td>@book.isbnNumber</td>
            </tr>
            <tr>
                <td>Szerző</td>
                <td>@book.Author</td>
            </tr>
            <tr>
                <td>Kiadó</td>
                <td>@book.Publisher</td>
            </tr>
            <tr>
                <td>Kategória</td>
                <td>@book.Category</td>
            </tr>
            <tr>
                <td>Kiadás éve</td>
                <td>@book.PublishDate</td>
            </tr>
            <tr>
                <td>Darab</td>
                <td>@book.Quantity</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveUser(book.Id))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    [Parameter]
    public int Id { get; set; }
    Books book = new Books();
    protected override async Task OnInitializedAsync()
    {
        book = await Http.GetFromJsonAsync<Books>("/Data/" + Convert.ToInt32(Id));
    }
    protected async Task RemoveUser(int Id)
    {
        await Http.DeleteAsync("/Data/" + Id);
        NavigationManager.NavigateTo("/fetchuserdetails");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/fetchuserdetails");
    }
}
