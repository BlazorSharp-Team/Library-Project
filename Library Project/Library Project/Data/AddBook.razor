@page "/admin/add"
@page "/admin/add/{Id:int}"
@using BlazorApp.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title Könyv hozzáadása</h1>
<hr />
<EditForm Model="@book" OnValidSubmit="SaveBook">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Id" class="form-label">ID</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Id" />
        </div>
        <ValidationMessage For="@(() => book.Id)" />
    </div>
    <div class="mb-3">
        <label for="Title" class="form-label">Cím</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Title" />
        </div>
        <ValidationMessage For="@(() => book.Title)" />
    </div>
    <div class="mb-3">
        <label for="isbnNumber" class="form-label">ISBN szám</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.isbnNumber" />
        </div>
        <ValidationMessage For="@(() => book.isbnNumber)" />
    </div>
    <div class="mb-3">
        <label for="Author" class="form-label">Szerző</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Author" />
        </div>
        <ValidationMessage For="@(() => book.Author)" />
    </div>
    <div class="mb-3">
        <label for="Publisher" class="form-label">Kiadó</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Publisher" />
        </div>
        <ValidationMessage For="@(() => book.Publisher)" />
    </div>
    <div class="mb-3">
        <label for="Category" class="form-label">Kategória</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Category" />
        </div>
        <ValidationMessage For="@(() => book.Category)" />
    </div>
    <div class="mb-3">
        <label for="PublishDate" class="form-label">Kiadás éve</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.PublishDate" />
        </div>
        <ValidationMessage For="@(() => book.PublishDate)" />
    </div>
    <div class="mb-3">
        <label for="Quantity" class="form-label">Darab</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Quantity" />
        </div>
        <ValidationMessage For="@(() => book.Quantity)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int Id { get; set; }
    protected string Title = "Add";
    protected Books book = new();
    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            Title = "Edit";
            book = await Http.GetFromJsonAsync<Books>("/Data/" + Id);
        }
    }
    protected async Task SaveBook()
    {
        if (book.Id != 0)
        {
            await Http.PutAsJsonAsync("/Data/", book);
        }
        else
        {
            await Http.PostAsJsonAsync("/Data/", book);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchuserdetails");
    }
}
